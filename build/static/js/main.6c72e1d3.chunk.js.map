{"version":3,"sources":["components/AppIndex.js","components/AuthIndex.js","components/apply.js","appRedux/state/AppState.js","appRedux/utility.js","appRedux/reducers/AuthOneReducer.js","appRedux/actions/AuthActionTypes.js","appRedux/store/AppStore.js","appRedux/actions/AuthActions.js","components/AuthButton1.js","components/AuthButton2.js","components/AuthForm1.js","components/LoginBody.js","components/login.js","components/SignUpBody.js","components/signUp.js","components/password.js","components/Loginbutton.js","components/ChangePasswordBody.js","components/ChangePassword.js","App.js","serviceWorker.js","index.js"],"names":["AppIndex","className","style","overflow","paddingTop","backgroundColor","opacity","padding","border","to","id","DialogTitle","withStyles","theme","root","margin","spacing","closeButton","position","right","top","color","palette","grey","props","children","classes","onClose","disableTypography","Typography","variant","IconButton","aria-label","onClick","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","React","useState","open","setOpen","handleClose","Button","Dialog","aria-labelledby","dividers","gutterBottom","apply","AppState","user","email","token","error","loading","userGroup","registration","success","authError","errorHead","errorBody","administrator","staff","applicant","loggedIn","updatedObject","oldObject","updatedProperties","clearFields","inputs","input","undefined","value","resetAlerts","temporaryState","authFormReset","fieldsAreEmpty","window","confirm","APP_URL","authStart","state","authSuccess","action","authFail","authLogout","AuthOneReducer","initialState","AuthForm1","document","getElementById","type","console","log","authSignup","AuthForm1Input1","AuthForm1Input2","AuthForm1Input3","AllReducer","combineReducers","AppStore","createStore","signup","login","reset","toggle","password1","password2","dispatch","axios","post","then","res","status","statusText","clear","data","key","catch","err","useStyles","makeStyles","button","textTransform","display","connect","appState","e","preventDefault","caption","ContainedButtons","btnRole","title","name","this","formTitle","htmlFor","aria-describedby","placeholder","AuthButton1","btnCaption1","formType","btnCaption2","Component","LoginBody","component","SignUpBody","flexWrap","withoutLabel","marginTop","textField","InputAdornments","prop","password","showPassword","values","setValues","StylesProvider","injectFirst","FormControl","clsx","InputLabel","Input","onChange","event","target","endAdornment","InputAdornment","onMouseDown","changePasswordBody","btnCaption","changePassword","ChangePasswordBody","App","redirect","path","exact","SignupBody","Boolean","location","hostname","match","ReactDOM","render","store","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.6c72e1d3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AppIndex = () => {\r\n  return (\r\n    <div className=\"widest highest\" style={{ overflow: \"hidden\" }}>\r\n      <div className=\"translucent-cover widest highest\">\r\n        <div\r\n          className=\"container-fluid\"\r\n          style={{ overflow: \"hidden\", paddingTop: \"50px\" }}\r\n        >\r\n          <div className=\"row\">\r\n            <div className=\"col-xl-3 col-lg-3 col-md-12 col-sm-12\"></div>\r\n            <div className=\"col-xl-6 col-lg-6 col-md-12 col-sm-12\">\r\n              <div className=\"row\">\r\n                <div className=\"col-xl-1 col-lg-1 col-md-1 col-sm-12\"></div>\r\n                <div className=\"col-xl-10 col-lg-10 col-md-10 col-sm-12\">\r\n                  <div\r\n                    className=\"index-options-panel\"\r\n                    style={{\r\n                      backgroundColor: \"#fff\",\r\n                      opacity: 1,\r\n                      padding: \"5px\"\r\n                    }}\r\n                  >\r\n                    <div style={{ border: \"1px solid #542a52\" }}>\r\n                      <div className=\"index-options-panel-header soap-app-h4\">\r\n                        Welcome to Refactory SOAP!\r\n                      </div>\r\n                      <div className=\"index-options-panel-body\">\r\n                        <div className=\"index-opttion-wrapper\">\r\n                          <div>\r\n                            <b>\r\n                              Is this your first time to apply for a Program at\r\n                              Refactory?\r\n                            </b>\r\n                            <p>First signup or create an account</p>\r\n                            <p>\r\n                              <Link to=\"/applicant/signup/\">\r\n                                <button\r\n                                  id=\"index-button1\"\r\n                                  className=\"btn btn-primary index-button\"\r\n                                >\r\n                                  <b>Signup</b>\r\n                                </button>\r\n                              </Link>\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                        <hr />\r\n\r\n                        <div className=\"index-opttion-wrapper\">\r\n                          <div>\r\n                            <b>\r\n                              Do you have an account on this Application portal?\r\n                            </b>\r\n                            <p>\r\n                              Login to your account and fill / complete the\r\n                              Application form.\r\n                            </p>\r\n                            <p>\r\n                              <Link to=\"/applicant/login/\">\r\n                                <button\r\n                                  id=\"index-button2\"\r\n                                  className=\"btn btn-primary index-button\"\r\n                                >\r\n                                  <b>Login</b>\r\n                                </button>\r\n                              </Link>\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                        <hr />\r\n\r\n                        <div className=\"index-opttion-wrapper\">\r\n                          <div>\r\n                            <b>You don’t know what to do ?</b>\r\n                            <p>\r\n                              First read our documentation on{\" \"}\r\n                              <b>How to apply</b>.\r\n                            </p>\r\n                            <p>\r\n                              <Link to=\"/applicant/guide/\">\r\n                                <button\r\n                                  id=\"index-button3\"\r\n                                  className=\"btn btn-primary index-button\"\r\n                                >\r\n                                  <b>How to Apply</b>\r\n                                </button>\r\n                              </Link>\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-xl-1 col-lg-1 col-md-1 col-sm-12\"></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xl-3 col-lg-3 col-md-12 col-sm-12\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Images start */}\r\n      <div className=\"container-fluid\" style={{ overflow: \"hidden\" }}>\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-1 img1\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-2 img2\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-1 img3\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-2 img4\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-1 img5\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-2 img6\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-1 img7\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-2 img8\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-1 img9\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-2 img10\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-1 img11\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-2 img12\"></div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-2 img13\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-1 img14\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-2 img15\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-1 img16\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-2 img17\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-1 img18\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-2 img19\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-1 img20\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-2 img21\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-1 img22\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-2 img23\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-1 img24\"></div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-1 img25\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-2 img26\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-1 img27\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-2 img28\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-1 img29\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-2 img30\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-1 img31\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-2 img32\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-1 img33\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-2 img34\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-1 img35\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-2 img36\"></div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-1 img5\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-2 img6\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-1 img7\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-2 img8\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-1 img17\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-2 img18\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-1 img19\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-2 img20\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-1 img29\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-2 img30\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-1 img31\"></div>\r\n          <div className=\"col-xl-1 col-lg-1 col-md-2 col-sm-4 img-area-2 img32\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppIndex;\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CustomizedDialogs() {\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"secondary\" onClick={handleClickOpen}>\r\n        Open dialog\r\n      </Button>\r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Choose Option\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography gutterBottom>\r\n            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis\r\n            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis\r\n            lacus vel augue laoreet rutrum faucibus dolor auctor.\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel\r\n            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus\r\n            auctor fringilla.\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Save changes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport \"../appStyles/App.css\";\r\nimport AuthIndex from \"./AuthIndex\";\r\n\r\nfunction apply() {\r\n  return (\r\n    <div id=\"hide\">\r\n      <AuthIndex />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default apply;\r\n","const AppState = {\r\n    user:{\r\n        email:\"user@refactory.ug\",\r\n        token:null,\r\n        error:false,\r\n        loading:false,\r\n        userGroup:null,\r\n        registration:{\r\n            success:false,\r\n        },\r\n        authError:{\r\n            errorHead:null,\r\n            errorBody:null\r\n        },\r\n\r\n        administrator:{},\r\n        staff:{},\r\n        applicant:{loggedIn:false},    \r\n    },\r\n}\r\nexport default AppState;","import AppState from './state/AppState';\r\n\r\nexport const updatedObject = (oldObject,updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}\r\n\r\nexport const fieldsAreEmpty = (inputs) => {\r\n    let input = undefined;\r\n    for(input in inputs){\r\n        if(inputs[input]){\r\n            if(inputs[input].value !== \"\"){\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nexport const clearFields = (inputs) => {\r\n    let input = undefined;\r\n    for(input in inputs){\r\n        if(inputs[input]){\r\n            inputs[input].value = \"\";\r\n        }\r\n    }\r\n\r\n};\r\n\r\nexport const resetAlerts = () =>{\r\n    let temporaryState = AppState;\r\n    temporaryState.user.registration.success = false;\r\n    temporaryState.user.error = false;\r\n};\r\n\r\nexport const authFormReset = (inputs) => {\r\n    resetAlerts();\r\n    if(!fieldsAreEmpty(inputs)){\r\n        if(window.confirm(\"Are you sure you want to terminate this process?.\")){\r\n            clearFields(inputs);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const APP_URL = 'http://127.0.0.1:8000/';","import AppState from '../state/AppState';\r\nimport * as actionTypes from '../actions/AuthActionTypes';\r\nimport {authSignup} from '../actions/AuthActions';\r\nimport {updatedObject,authFormReset,resetAlerts} from '../utility';\r\n\r\n\r\nconst authStart = (state)=>{\r\n    return updatedObject(state,\r\n        {\r\n            error:null,\r\n            loading:true\r\n        }\r\n    );\r\n}\r\n\r\nconst authSuccess = (state,action)=>{\r\n    return updatedObject(state,\r\n        {\r\n            token: action.token,\r\n            error:null,\r\n            loading:false\r\n        }\r\n    );\r\n}\r\n\r\nconst authFail = (state,action)=>{\r\n    return updatedObject(state,\r\n        {\r\n            error:action.error,\r\n            loading:false\r\n        }\r\n    );\r\n}\r\n\r\nconst authLogout = (state,action)=>{\r\n    return updatedObject(state,\r\n        {\r\n            token: null,\r\n        }\r\n    );\r\n}\r\n\r\n\r\nconst AuthOneReducer = (initialState = AppState.user, action) => {\r\n\r\n    const AuthForm1 = document.getElementById('AuthForm1');\r\n\r\n    switch (action.type) {\r\n        case actionTypes.SIGNUP:\r\n            console.log(\"signing up now..........................\");\r\n            authSignup(AuthForm1.AuthForm1Input1,AuthForm1.AuthForm1Input2,AuthForm1.AuthForm1Input2)();\r\n            break;\r\n\r\n        case actionTypes.LOGIN:\r\n            console.log(\"Loging in  now..........................\");\r\n            break;\r\n                \r\n        case actionTypes.RESET:\r\n                console.log(\"resetting now..........................\");\r\n                authFormReset(\r\n                    [\r\n                        AuthForm1.AuthForm1Input1,\r\n                        AuthForm1.AuthForm1Input2,\r\n                        AuthForm1.AuthForm1Input3\r\n                    ]\r\n                    );\r\n                break;\r\n        \r\n        case actionTypes.TOGGLE:\r\n                resetAlerts();\r\n                console.log(\"toggling now..........................\");\r\n                break;\r\n\r\n        case actionTypes.AUTH_START: \r\n            authStart(initialState);\r\n            break;\r\n\r\n        case actionTypes.AUTH_SUCCESS: \r\n            authSuccess(initialState,action);\r\n            break;\r\n\r\n        case actionTypes.AUTH_FAIL: \r\n            authFail(initialState,action);\r\n            break;\r\n\r\n        case actionTypes.AUTH_LOGOUT: \r\n            authLogout(initialState,action);\r\n            break;\r\n\r\n        default:\r\n            return AppState;\r\n    }\r\n    \r\n    initialState = {\r\n        ...AppState,\r\n        ...initialState\r\n    };\r\n\r\n    // console.log(initialState);\r\n    return initialState;\r\n}\r\nexport default AuthOneReducer;\r\n","export const SIGNUP = \"signup\";\r\nexport const LOGIN = \"login\";\r\nexport const RESET = \"reset\";\r\nexport const TOGGLE = \"toggle\";\r\nexport const AUTH_START = \"AUTH_START\";\r\nexport const AUTH_SUCCESS = \"AUTH_SUCCESS\";\r\nexport const AUTH_FAIL = \"AUTH_FAIL\";\r\nexport const AUTH_LOGOUT = \"AUTH_LOGOUT\";\r\n","import {createStore, combineReducers} from \"redux\";\r\nimport AuthOneReducer from '../reducers/AuthOneReducer'\r\n\r\n\r\n\r\nconst AllReducer = combineReducers({AuthOneReducer});\r\nconst AppStore = createStore(AllReducer);\r\nexport default AppStore;\r\n","import * as actionTypes from './AuthActionTypes';\r\nimport axios from 'axios';\r\nimport {APP_URL,clearFields,resetAlerts} from '../utility';\r\nimport AppStore from '../store/AppStore';\r\nimport AppState from '../state/AppState';\r\n// import {push} from 'react-router-redux';\r\n\r\nexport const signup = () => {\r\n  return {\r\n    type: actionTypes.SIGNUP\r\n  };\r\n};\r\n\r\nexport const login = () => {\r\n  return {\r\n    type: actionTypes.LOGIN\r\n  };\r\n};\r\n\r\nexport const reset = () => {\r\n  return {\r\n    type: actionTypes.RESET\r\n  };\r\n};\r\n\r\nexport const toggle = () => {\r\n  return {\r\n    type: actionTypes.TOGGLE\r\n  };\r\n};\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START,\r\n        payload:null\r\n    };\r\n}\r\n\r\nexport const authSuccess = token => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    token: token\r\n  };\r\n};\r\n\r\nexport const authFail = error => {\r\n  return {\r\n    type: actionTypes.AUTH_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const authLogout = () => {\r\n  localStorage.removeItem(\"user\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT\r\n  };\r\n};\r\n\r\nconst checkAuthTimeout = expirationTime => {\r\n  return dispatch => {\r\n    setTimeout(() => {\r\n      dispatch(logout());\r\n    }, expirationTime * 1000);\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"token\");\r\n  localStorage.removeItem(\"expirationDate\");\r\n\r\n  return {\r\n    type: actionTypes.AUTH_LOGOUT\r\n  };\r\n};\r\n\r\nexport const Validate = (email, password) => {};\r\n\r\nexport const authLogin = (email, password) => {\r\n    return dispatch => {\r\n        // AppStore.dispatch(authStart());\r\n        axios.post(APP_URL+'rest-auth/login/', {\r\n            \"email\": email,\r\n            \"password\": password\r\n        }).then(res =>{\r\n            const token = res.data.key;\r\n            const expirationDate = new Date(new Date().getTime() + 3600*1000);\r\n            localStorage.setItem('token',token);\r\n            localStorage.setItem('expirationDate',expirationDate);\r\n            dispatch(authSuccess(token));\r\n            dispatch(checkAuthTimeout(3600));\r\n        }).catch(err => {\r\n            dispatch(authFail(err))\r\n        })\r\n\r\n    };\r\n}\r\n\r\nexport const authSignup = (email, password1, password2) => {\r\n    return dispatch => {\r\n        resetAlerts();\r\n        axios.post((APP_URL+'rest-auth/registration/'), {\r\n            \"email\": email.value,\r\n            \"password1\": password1.value,\r\n            \"password2\": password2.value,            \r\n        }).then(res =>{\r\n            if(res.status === 201 && res.statusText === \"Created\"){\r\n                console.clear();\r\n                const token = res.data.key;\r\n/*                 const expirationDate = new Date(new Date().getTime() + 3600*1000);\r\n                localStorage.setItem('token',token);\r\n                localStorage.setItem('expirationDate',expirationDate);\r\n                authSuccess(token);\r\n                checkAuthTimeout(3600); */\r\n                let temporaryState = AppState;\r\n                temporaryState.user.registration.success = true;\r\n                clearFields([email, password1, password2]);\r\n                AppStore.dispatch(authSuccess(token));\r\n                console.clear();\r\n    \r\n            }\r\n\r\n        }).then(axios.post((APP_URL+'rest-auth/logout/'))).catch(err => {\r\n            console.clear();\r\n            let temporaryState = AppState;\r\n            temporaryState.user.error = true;\r\n            temporaryState.user.authError.errorHead = \"Signup Failed!\";\r\n            temporaryState.user.authError.errorBody = \"Email or password is incorrect\";\r\n            AppStore.dispatch(authFail(err));\r\n            console.clear();\r\n            // console.log(err);\r\n            // console.error(err);\r\n        })\r\n\r\n    };\r\n}\r\n\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { signup, login } from \"../appRedux/actions/AuthActions\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    textTransform: \"capitalize\"\r\n  },\r\n  input: {\r\n    display: \"none\"\r\n  }\r\n}));\r\n\r\nfunction ContainedButtons(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        id=\"auth-btn1\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n        onClick={e => {\r\n          e.preventDefault();\r\n          props.action === \"login\"\r\n            ? props.login()\r\n            : props.action === \"signup\"\r\n            ? props.signup()\r\n            : console.error(\"error occured\");\r\n        }}\r\n      >\r\n        {props.caption}\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = appState => {\r\n  // console.log(appState)\r\n  return { appState: appState };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n  return {\r\n    signup,\r\n    login\r\n  };\r\n};\r\n\r\n//   Connect redux with react\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps()\r\n)(ContainedButtons);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport { connect } from 'react-redux';\r\nimport {reset,toggle} from '../appRedux/actions/AuthActions';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n    textTransform: \"none\"\r\n  },\r\n  input: {\r\n    display: \"none\"\r\n  }\r\n}));\r\n\r\nexport default function ContainedButtons(props) {\r\n  const classes = useStyles();\r\n   return (\r\n        <div>\r\n        {\r\n          props.btnRole === \"toggle\" ?\r\n          <Link to={props.caption === \"Login\"?\"/applicant/login\":\"/applicant/signup\"} className=\"btn-link\">\r\n            <Button \r\n              id=\"auth-btn2\" \r\n              variant=\"contained\" \r\n              color=\"primary\" \r\n              className={classes.button}\r\n              onClick={\r\n                () => { \r\n                  props.reset();\r\n                }\r\n              } \r\n\r\n              >\r\n                      {props.caption}          \r\n              </Button>\r\n              </Link>\r\n          :\r\n          props.btnRole === \"reset\" ?\r\n            <Button \r\n            id=\"auth-btn2\" \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            className={classes.button}\r\n              onClick={\r\n                (e) => { \r\n                  e.preventDefault(); \r\n                  props.btnRole === \"reset\" ? \r\n                  props.reset() \r\n                  : \r\n/*                   props.btnRole === \"toggle\" ? \r\n                  props.toggle(props.action) \r\n                  :  */\r\n                  console.error('error occured'); \r\n                }\r\n              }\r\n            >\r\n                    {props.caption}\r\n            </Button>\r\n          :null      \r\n        }\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (appState) => {\r\n    // console.log(appState)\r\n    return { appState: appState };\r\n  }\r\n  \r\n  const mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      reset,\r\n      toggle\r\n    }\r\n  }\r\n  //   Connect redux with react\r\n connect(mapStateToProps, mapDispatchToProps())(ContainedButtons);\r\n","import React from \"react\";\r\nimport AuthButton1 from \"./AuthButton1\";\r\nimport AuthButton2 from \"./AuthButton2\";\r\n// import AuthButton3 from \"./AuthButton2\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"../appStyles/App.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass AuthForm1 extends React.Component {\r\n  state = { title: undefined };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-12 col-md-12  col-lg-3 col-xl-3\"></div>\r\n            <div className=\"col-sm-12 col-md-12  col-lg-6 col-xl-6\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-12 col-md-12  col-lg-12 col-xl-1\"></div>\r\n                <div className=\"col-sm-12 col-md-12  col-lg-12 col-xl-10\">\r\n                  <div>\r\n                    <div className=\"vertical-spacing3\"></div>\r\n\r\n                    <form id=\"AuthForm1\" name=\"AuthForm1\">\r\n                      <div className=\"Auth-form1-wrapper\">\r\n                        <div className=\"Auth-form1-Header\">\r\n                          <h4>\r\n                            <strong>{this.props.formTitle}</strong>\r\n                          </h4>\r\n                        </div>\r\n                        {this.props.appState.AuthOneReducer.user.error ? (\r\n                          <div className=\"Auth-form1-Error-Header\">\r\n                            <span className=\"soap-app-h4\">\r\n                              {\r\n                                this.props.appState.AuthOneReducer.user\r\n                                  .authError.errorHead\r\n                              }\r\n                            </span>\r\n                            <span>\r\n                              {\" \"}\r\n                              {\r\n                                this.props.appState.AuthOneReducer.user\r\n                                  .authError.errorBody\r\n                              }\r\n                            </span>\r\n                          </div>\r\n                        ) : null}\r\n\r\n                        {this.props.appState.AuthOneReducer.user.registration\r\n                          .success ? (\r\n                          <div className=\"Auth-form1-Succes-Header btn-success\">\r\n                            <span className=\"soap-app-h4\">Success!</span>\r\n                            <span>\r\n                              {\" \"}\r\n                              You have successfully created your Account.\r\n                            </span>\r\n                          </div>\r\n                        ) : null}\r\n                        <div className=\"Auth-form1-Body\">\r\n                          <div className=\"container\">\r\n                            <div className=\"row\">\r\n                              <div className=\"col-sm-12 col-md-12  col-lg-12 col-xl-12\">\r\n                                <div className=\"form-group\">\r\n                                  <label htmlFor=\"Auth-form1-input1\">\r\n                                    <h4>Email address</h4>\r\n                                  </label>\r\n                                  <input\r\n                                    type=\"email\"\r\n                                    className=\"form-control\"\r\n                                    id=\"Auth-form1-input1\"\r\n                                    name=\"AuthForm1Input1\"\r\n                                    aria-describedby=\"emailHelp\"\r\n                                    placeholder=\"Enter your email address\"\r\n                                  />\r\n                                  <div className=\"email-error\">\r\n                                    Invalid Email Address\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"vertical-spacing2\"></div>\r\n                          <div className=\"container\">\r\n                            <div className=\"row\">\r\n                              <div className=\"col-sm-12 col-md-12  col-lg-12 col-xl-12\">\r\n                                {/* Password Field */}\r\n                                <div className=\"form-group\">\r\n                                  <label htmlFor=\"Auth-form1-input2\">\r\n                                    <h4>Password</h4>\r\n                                  </label>\r\n                                  <input\r\n                                    type=\"password\"\r\n                                    className=\"form-error-outline form-control\"\r\n                                    id=\"Auth-form1-input2\"\r\n                                    name=\"AuthForm1Input2\"\r\n                                    aria-describedby=\"passwordHelp\"\r\n                                    placeholder=\"Enter your password here\"\r\n                                  />\r\n                                  <div className=\"password-error\">\r\n                                    Incorrect password\r\n                                  </div>\r\n                                </div>\r\n\r\n                                {/* confirm Password field */}\r\n                                {/* {this.props.formType === \"signup\" ? \r\n                                <div className=\"form-group\">\r\n                                <div className=\"vertical-spacing2\"></div>\r\n                                <label htmlFor=\"Auth-form1-input3\">\r\n                                  <h4>Confirm Password</h4>\r\n                                </label>\r\n                                <input\r\n                                  type=\"password\"\r\n                                  className=\"form-error-outline form-control\"\r\n                                  id=\"Auth-form1-input3\"\r\n                                  name = \"AuthForm1Input3\"\r\n                                  aria-describedby=\"passwordHelp\"\r\n                                  placeholder=\"Re-enter password\"\r\n                                />\r\n                                <div className=\"password-error\">\r\n                                  Incorrect password\r\n                                </div>\r\n                              </div> \r\n                                \r\n                                  :\r\n                                  null} */}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"vertical-spacing2\"></div>\r\n\r\n                          <div className=\"container\">\r\n                            <div id=\"Auth-form1-btn-margin\" className=\"row\">\r\n                              <div className=\"col-sm-12 col-md-6  col-lg-6 col-xl-6\">\r\n                                <AuthButton1\r\n                                  caption={this.props.btnCaption1}\r\n                                  action={this.props.formType}\r\n                                />\r\n                              </div>\r\n                              <div className=\"col-sm-12 col-md-6  col-lg-6 col-xl-6\">\r\n                                <AuthButton2\r\n                                  btnRole=\"reset\"\r\n                                  caption=\"Cancel\"\r\n                                  action={this.props.formType}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"vertical-spacing3\"></div>\r\n\r\n                          <div className=\"row\">\r\n                            <div className=\"col-sm-12 col-md-12  col-lg-12 col-xl-12\">\r\n                              <center\r\n                                id={\r\n                                  this.props.formType !== \"login\"\r\n                                    ? \"hide\"\r\n                                    : null\r\n                                }\r\n                              >\r\n                                <Link to=\"/applicant/resetpassword/\">\r\n                                  <h6>Forgot your password?</h6>\r\n                                </Link>\r\n                              </center>\r\n                              <center\r\n                                id={\r\n                                  this.props.formType !== \"signup\"\r\n                                    ? \"hide\"\r\n                                    : null\r\n                                }\r\n                              >\r\n                                <h5>Log In if you already have an Account</h5>\r\n                              </center>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"container\">\r\n                            <div id=\"Auth-form1-btn-signup\" className=\"row\">\r\n                              <div className=\"col-sm-12 col-md-12  col-lg-12 col-xl-12\">\r\n                                <AuthButton2\r\n                                  btnRole=\"toggle\"\r\n                                  caption={this.props.btnCaption2}\r\n                                  action={this.props.formType}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-col-sm-12 col-md-12  col-lg-12 col-xl-1\"></div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              id=\"col3\"\r\n              className=\"col-sm-12 col-md-12  col-lg-3 col-xl-3\"\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = appState => {\r\n  // console.log(appState.AuthOneReducer.user.registration);\r\n  return { appState: appState };\r\n};\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//     signup,\r\n//     login,\r\n//   }\r\n// }\r\n\r\n//   Connect redux with react\r\nexport default connect(mapStateToProps /* mapDispatchToProps() */)(AuthForm1);\r\n","import React from \"react\";\r\nimport AuthForm1 from \"./AuthForm1\";\r\n\r\nfunction LoginBody() {\r\n  return (\r\n    <div>\r\n      <AuthForm1\r\n        formType=\"login\"\r\n        formTitle=\"LOGIN FORM\"\r\n        btnCaption1=\"Login\"\r\n        btnCaption2=\"Signup\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default LoginBody;\r\n","import React from \"react\";\r\nimport \"../appStyles/App.css\";\r\nimport LoginBody from \"./LoginBody\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\n\r\nfunction login(props) {\r\n  // <Route path=\"/applicant/login\" component={signup} />\r\n  //   <Route path=\"/staff/login\" component={signup} />\r\n  //   <Route path=\"/admin/login\" component={signupc} />\r\n\r\n  let resolver = () => {\r\n    return <Route component={LoginBody} />;\r\n  };\r\n  return <Router>{resolver()}</Router>;\r\n}\r\n\r\nexport default login;\r\n","import React from \"react\";\r\nimport AuthForm1 from \"./AuthForm1\";\r\n\r\nfunction SignUpBody() {\r\n  return (\r\n    <div>\r\n      <AuthForm1\r\n        formType=\"signup\"\r\n        formTitle=\"SIGNUP FORM\"\r\n        btnCaption1=\"Signup\"\r\n        btnCaption2=\"Login\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default SignUpBody;\r\n","import React from \"react\";\r\nimport \"../appStyles/App.css\";\r\nimport SignupBody from \"./SignUpBody\";\r\n\r\nfunction signup() {\r\n  return (\r\n    <div>\r\n      <SignupBody />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default signup;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\n// import TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport \"../appStyles/App.css\";\r\nimport { StylesProvider } from \"@material-ui/styles\";\r\n\r\nconst ranges = [\r\n  {\r\n    value: \"0-20\",\r\n    label: \"0 to 20\"\r\n  },\r\n  {\r\n    value: \"21-50\",\r\n    label: \"21 to 50\"\r\n  },\r\n  {\r\n    value: \"51-100\",\r\n    label: \"51 to 100\"\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  textField: {\r\n    // flexBasis: 200\r\n  }\r\n}));\r\n\r\nexport default function InputAdornments(props) {\r\n  const classes = useStyles();\r\n  const [values, setValues] = React.useState({\r\n    // amount: '',\r\n    password: \"\",\r\n    // weight: '',\r\n    // weightRange: '',\r\n    showPassword: false\r\n  });\r\n\r\n  const handleChange = prop => event => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = event => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <StylesProvider injectFirst>\r\n      <div className={classes.root}>\r\n        <FormControl className={clsx(classes.margin, classes.textField)}>\r\n          <InputLabel htmlFor=\"adornment-password\">{props.password}</InputLabel>\r\n          <Input\r\n            id=\"adornment-password\"\r\n            type={values.showPassword ? \"text\" : \"password\"}\r\n            value={values.password}\r\n            onChange={handleChange(\"password\")}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"toggle password visibility\"\r\n                  onClick={handleClickShowPassword}\r\n                  onMouseDown={handleMouseDownPassword}\r\n                >\r\n                  {values.showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n      </div>\r\n    </StylesProvider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  input: {\r\n    display: \"none\"\r\n  }\r\n}));\r\n\r\nexport default function ContainedButtons(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        id=\"login-button\"\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n      >\r\n        <h5>\r\n          <strong>{props.caption}</strong>\r\n        </h5>\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"../appStyles/App.css\";\r\nimport InputAdornments from \"./password\";\r\nimport Loginbutton from \"./Loginbutton\";\r\n\r\nclass changePasswordBody extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-12 col-md-12  col-lg-3 col-xl-3\"></div>\r\n            <div className=\"col-sm-12 col-md-12  col-lg-6 col-xl-6\">\r\n              <div className=\"row\">\r\n                <div className=\"col-sm-12 col-md-12  col-lg-1 col-xl-1\"></div>\r\n                <div className=\"col-sm-12 col-md-12  col-lg-10 col-xl-10\">\r\n                  <div>\r\n                    <div className=\"vertical-spacing3\"></div>\r\n\r\n                    <form>\r\n                      <div className=\"changePassword-wrapper\">\r\n                        <div className=\"Password-Header\">\r\n                          <div className=\"changePassword-Info\">\r\n                            <h4>\r\n                              <strong>{this.props.formType}</strong>\r\n                            </h4>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"changePassword-Error-Header\">\r\n                          <b>Failed: </b>Invalid credentials!\r\n                        </div>\r\n                        <div className=\"changePassword-Body\">\r\n                          <div className=\"row\">\r\n                            <div className=\"col-sm-12 col-md-12  col-lg-12 col-xl-12\">\r\n                              <InputAdornments password=\"Enter Current Password\" />\r\n                              <div className=\"password-error\">\r\n                                Incorrect password\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div className=\"vertical-spacing2\"></div>\r\n                          <div className=\"row\">\r\n                            <div className=\"col-sm-12 col-md-12  col-lg-12 col-xl-12\">\r\n                              <InputAdornments password=\"Enter New password\" />\r\n                              <div className=\"password-error\">\r\n                                Incorrect password\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"vertical-spacing2\"></div>\r\n\r\n                          <div className=\"row\">\r\n                            <div className=\"col-sm-12 col-md-12  col-lg-12 col-xl-12\">\r\n                              <InputAdornments password=\"Re-enter New Password\" />\r\n                              <div className=\"password-error\">\r\n                                Incorrect password\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n\r\n                          <div id=\"changepasswordBtn\" className=\"row\">\r\n                            <div className=\"col-sm-12 col-md-6  col-lg-6 col-xl-6\"></div>\r\n                            <div className=\"col-sm-12 col-md-6  col-lg-6 col-xl-6\">\r\n                              <Loginbutton caption={this.props.btnCaption} />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-col-sm-12 col-md-12  col-lg-1 col-xl-1\"></div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              id=\"col3\"\r\n              className=\"col-sm-12 col-md-12  col-lg-3 col-xl-3\"\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default changePasswordBody;\r\n","import React from \"react\";\r\nimport \"../appStyles/App.css\";\r\n\r\nimport ChangePasswordBody from \"./ChangePasswordBody\";\r\n\r\nfunction changePassword() {\r\n  return (\r\n    <div>\r\n      <ChangePasswordBody\r\n        formType=\"change password\"\r\n        btnCaption=\"Change Password\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default changePassword;\r\n","import React from \"react\";\r\n// import {connect} from 'react-redux';\r\nimport \"./appStyles/App.css\";\r\nimport \"./appStyles/photos.css\";\r\n// import \"./appStyles/index.css\";\r\n\r\nimport AppIndex from \"./components/AppIndex\";\r\nimport apply from \"./components/apply\";\r\n// import Nav from \"./components/nav\";\r\nimport login from \"./components/login\";\r\nimport SignupBody from \"./components/SignUpBody\";\r\nimport LoginBody from \"./components/LoginBody\";\r\nimport signup from \"./components/signUp\";\r\nimport changePassword from \"./components/ChangePassword\";\r\n// import applicant from \"./components/applicant\";\r\n// import admin from \"./components/Admin\";\r\n// import staff from \"./components/Staff\";\r\n// import application from \"./components/application\";\r\n// import selection from \"./components/selection\";\r\n// import admission from \"./components/admission\";\r\n// import interview from \"./components/interview\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    redirect: true\r\n  };\r\n\r\n  // componentDidMount(){\r\n  //   console.log(\"Main App component was mounted\");\r\n  // }\r\n\r\n  render() {\r\n    const notfound = () => {\r\n      const { redirect } = this.state;\r\n      if (redirect) {\r\n        return <Redirect to=\"/login\" />;\r\n      }\r\n    };\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          {/* <Nav /> */}\r\n          {/* <div className=\"vertical-spacing3\"></div> */}\r\n          <Switch>\r\n            <Route path=\"/\" exact component={AppIndex} />\r\n            <Route path=\"/apply\" exact component={apply} />\r\n            <Route path=\"/login\" component={login} />\r\n            <Route path=\"/signup\" component={signup} />\r\n            {/* <Route path=\"/applicant\" exact component={applicant} /> */}\r\n            {/* <Route path=\"/applicant/application\" component={application} /> */}\r\n            {/* <Route path=\"/admin\" component={admin} /> */}\r\n            <Route path=\"/changePassword\" component={changePassword} />\r\n            <Route path=\"/applicant/signup\" component={SignupBody} />\r\n            <Route path=\"/applicant/login\" component={LoginBody} />\r\n            {/* <Route path=\"/staff\" exact component={staff} />\r\n            <Route path=\"/staff/selection\" component={selection} />\r\n            <Route path=\"/staff/admission\" component={admission} />\r\n            <Route path=\"/staff/interview\" component={interview} /> */}\r\n            <Route component={notfound} />\r\n          </Switch>\r\n          <div className=\"vertical-spacing3\"></div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\n// const mapStateToProps = (appState) =>{\r\n//   return {appState:appState};\r\n// }\r\n\r\n// const mapDispatchToProps = (dispatch) =>{\r\n//   return {login:dispatch({type:'login'})};\r\n// }\r\n\r\nexport default App;\r\n// connect(mapStateToProps,mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './appStyles/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport AppStore from './appRedux/store/AppStore';\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={AppStore}>\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}